name: Docker Login to OCI Container Registry

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  login-to-ocir:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install OCI CLI using pip
        run: |
          python3 -m pip install oci-cli

      - name: Install jq for JSON parsing
        run: |
          sudo apt-get update
          sudo apt-get install jq

      - name: Get OCI Auth Token and Log into OCIR
        run: |
          echo "Getting OCI token..."
          
          # Get the security token securely from GitHub Secrets
          security_token="eyJraWQiOiJhc3dfaWFkXzE3MTU2NDgwNzIzNzciLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiJvY2lkMS51c2VyLm9jMS4uYWFhYWFhYWFzd3VhamRrM2ZndGVydzNnZG92dGxqd2gzYzdid2J3dGV2MzRudTZ2Y3d4YmxrN3RhbHlhIiwiaXNzIjoiYXV0aFNlcnZpY2Uub3JhY2xlLmNvbSIsInNhbWxfZnByaW50IjoiNjQ6Mzk6MjQ6ZmM6YmI6MGQ6NDE6ZTg6ZjA6MjM6NWQ6MzU6ODA6Mjg6MjI6ODMiLCJwdHlwZSI6InVzZXIiLCJzZXNzX2V4cCI6Ik1vbiwgMjUgTm92IDIwMjQgMTM6NDc6NDYgVVRDIiwiYXVkIjoib2NpIiwicHN0eXBlIjoibmF0ZiIsInR0eXBlIjoic2FtbGMiLCJleHAiOjE3MzI1MzE2OTksImlhdCI6MTczMjUyODA5OSwianRpIjoiMGYwYzM3ODktMTNlZi00ZjgzLTk5MDEtNWYwZTY0ODQ3MWM0IiwidGVuYW50Ijoib2NpZDEudGVuYW5jeS5vYzEuLmFhYWFhYWFhZ2tiemdnNmxwenJmNDd4enk0cmpveGc0ZGU2bmNmaXEycm5jbWppdWp2eTJoamd4dnppcSIsImlzX2ZlZCI6InRydWUiLCJncnBzIjoiIiwiandrIjoie1wia2lkXCI6XCJJZ25vcmVkXCIsXCJuXCI6XCJ4VVd5amhtVngycXJLd0VrakdUUVhYRkc2UHBYLXJiNC1QckF6d1JSQ1NwdXU5MXoycUowUFRwaDY1S2I5aWtVb19xVWFRQ1Jkd0FfQS1UeTRvbFdtbkxKbEZXZUNlYU9Ja1dHRHNUU2lGcGZFaG1JTjc1OWFXSF9heXh0MFlVZlE0R045UEpSbTJtSXZiU2l4WDlqbFFxMnp0eFV1VEswaDUwMk9SbW9nNVUzZkNLWUpFY24xR0szOTNsUF9LdDZSTVM0OWFuZzBMMTc4R1dTMkFnVnUyb2lHRlQwaEZUVVdCQ0EwSklaLWNpT1VVak9DbHBaWV9VYl9ESDJqSndMUFV1cW9PZFJWbnRhaVNjTUkxblhkTjZRSWRwWEgyeGEtN0R5UUVrU1pVZjJMamdpcEJNaWFkUXhxanpDTWtmWkRyS2ZqblR3dzRQdGtEeFRFenZKMVFcIixcImVcIjpcIkFRQUJcIixcImt0eVwiOlwiUlNBXCIsXCJ1c2VcIjpudWxsfSJ9.e3z9ThH2YEkrQwKzSMmpfUpHqxEt87BsUZejP5rJhg5BCr9XwBMQiU18rh-GQ4kNOIk51PWsuKPo1wSVfVeWYeCr_a6v8mw1p7B3UzApBbq-mGR-n6bJZH8qYmEB7QOLSAFns_HxpWO3gwSgWpM8WxoD2aBtxIVO4RPmy3jeTsGSbuueTjPJP4Ie3L07aIUK94vKFTs1HwUcClfrmIsW7ZVAOUM-568UaAkRq2niSmVPF-0UDU3Y43FRjbja3DgW7gjKTFGqFyVviP9AboPWfOO1h2jxadHnxY7cnXkJJfdf_Uuj1Kti_oCK9RD4gspGy8lHMRRusLxdwXVTM6BI8w"
          request_header="{\"Authorization\": \"Bearer $security_token\"}"
          # Debug OCI CLI command structure
          echo "OCI CLI command: oci raw-request --region iad --auth security_token --http-method GET --target-uri \"https://iad.ocir.io/20180419/docker/token\" --request-headers \"$request_header\""

          # Retrieve the OCI container registry token
          response=$(oci raw-request --region iad --auth security_token --http-method GET --target-uri "https://iad.ocir.io/20180419/docker/token" --request-headers "$request_header" 2>&1)
          
          # Output the full response for debugging
          echo "Full OCI CLI Response: $response"
          
          # Check if response contains expected data
          if echo "$response" | jq -e .data.token > /dev/null; then
            token=$(echo "$response" | jq -r .data.token)
            echo "Token successfully retrieved."
            
            # Log in to Docker with the retrieved token
            echo "$token" | docker login -u 'bearer' --password-stdin iad.ocir.io
          else
            echo "Error: Invalid response or unable to retrieve token."
            echo "Raw response: $response"
            exit 1
          fi

      - name: Pull and Tag Docker Image
        run: |
          docker pull oraclelinux:8-slim
          docker tag "oraclelinux:8-slim" "${{ secrets.OCI_REPOSITORY_PATH }}:8-slim"

      - name: Push Docker Image to OCIR
        run: |
          docker push "${{ secrets.OCI_REPOSITORY_PATH }}:8-slim"
