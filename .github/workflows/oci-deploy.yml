name: OCI Functions Deployment

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx (to build multi-platform images)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Build and push Docker image to OCI Registry
    - name: Build and push Docker image to OCI Registry
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: <oci-registry>/<repo>/my-function:latest  # Replace with your OCI registry details
        file: ./Dockerfile

    # Step 4: Authenticate to OCI using OAuth token
    - name: Authenticate with OCI using OAuth Token
      run: |
        echo ${{ secrets.OCI_OAUTH_TOKEN }} > /tmp/oauth_token
        oci setup config --auth oauth2 --token-file /tmp/oauth_token

    # Step 5: Deploy the function to OCI Functions
    - name: Deploy to OCI Functions
      run: |
        # Create the app if it doesn't exist
        oci fn app create --compartment-id <compartment-id> --name <app-name> --region <region>

        # Deploy the function
        oci fn function create \
          --compartment-id <compartment-id> \
          --app-id <app-id> \
          --name <function-name> \
          --image <oci-registry>/<repo>/my-function:latest \
          --memory 256 \
          --timeout 30
