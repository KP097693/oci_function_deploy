name: CI/CD Pipeline to OCI

on:
  push:
    branches:
      - master  # Trigger the workflow on push to the master branch
  pull_request:
    branches:
      - master  # Trigger on pull requests to the master branch

jobs:
  # Job to build the Docker image
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Verify Docker installation and set up Docker Buildx
      - name: Verify Docker and Install Docker Buildx
        run: |
          docker --version
          docker info
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to OCI Container Registry using the token (for testing)
      - name: Log in to OCI Container Registry
        run: |
          echo "Logging in to OCI Container Registry..."
          echo "QkVBUkVSX1RPS0VOOmV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVekkxTmlKOS5leUpsZUhBaU9qRTNNekkxTWprM056UXNJbTVpWmlJNk1UY3pNalV5TmpFM05Dd2lhV0YwSWpveE56TXlOVEkyTVRjMExDSnpkV0lpT2lKN1hDSjFjMlZ5U1dSY0lqcGNJbTlqYVdReExuVnpaWEl1YjJNeExpNWhZV0ZoWVdGaFlYTjNkV0ZxWkdzelptZDBaWEozTTJka2IzWjBiR3AzYUROak4ySjNZbmQwWlhZek5HNTFOblpqZDNoaWJHczNkR0ZzZVdGY0lpeGNJblJsYm1GdWRFbGtYQ0k2WENKdlkybGtNUzUwWlc1aGJtTjVMbTlqTVM0dVlXRmhZV0ZoWVdGbmEySjZaMmMyYkhCNmNtWTBOM2g2ZVRSeWFtOTRaelJrWlRadVkyWnBjVEp5Ym1OdGFtbDFhblo1TW1ocVozaDJlbWx4WENJc1hDSmpiR0ZwYlhOY0lqcGJlMXdpYTJWNVhDSTZYQ0pvWDJodmMzUmNJaXhjSW5aaGJIVmxYQ0k2WENKcFlXUXViMk5wY2k1cGIxd2lMRndpYVhOemRXVnlYQ0k2WENKb1hDSjlMSHRjSW10bGVWd2lPbHdpYUY5a1lYUmxYQ0lzWENKMllXeDFaVndpT2x3aVRXOXVMQ0F5TlNCT2IzWWdNakF5TkNBd09Ub3hOam93T0NCSFRWUmNJaXhjSW1semMzVmxjbHdpT2x3aWFGd2lmU3g3WENKclpYbGNJanBjSW5OaGJXeGZabkJ5YVc1MFhDSXNYQ0oyWVd4MVpWd2lPbHdpTmpRNk16azZNalE2Wm1NNlltSTZNR1E2TkRFNlpUZzZaakE2TWpNNk5XUTZNelU2T0RBNk1qZzZNakk2T0ROY0lpeGNJbWx6YzNWbGNsd2lPbHdpWVhWMGFGTmxjblpwWTJVdWIzSmhZMnhsTG1OdmJWd2lmU3g3WENKclpYbGNJanBjSW5CMGVYQmxYQ0lzWENKMllXeDFaVndpT2x3aWRYTmxjbHdpTEZ3aWFYTnpkV1Z5WENJNlhDSmhkWFJvVTJWeWRtbGpaUzV2Y21GamJHVXVZMjl0WENKOUxIdGNJbXRsZVZ3aU9sd2lZWFYwYUc5eWFYcGhkR2x2Ymx3aUxGd2lkbUZzZFdWY0lqcGNJbE5wWjI1aGRIVnlaU0JoYkdkdmNtbDBhRzA5WEZ4Y0luSnpZUzF6YUdFeU5UWmNYRndpTEdobFlXUmxjbk05WEZ4Y0ltUmhkR1VnS0hKbGNYVmxjM1F0ZEdGeVoyVjBLU0JvYjNOMFhGeGNJaXhyWlhsSlpEMWNYRndpVTFRa1pYbEtjbUZYVVdsUGFVcG9Zek5rWm1GWFJtdFlla1V6VFZSVk1rNUVaM2RPZWtsNlRucGphVXhEU21oaVIyTnBUMmxLVTFWNlNURk9hVW81TG1WNVNucGtWMGxwVDJsS2Rsa3liR3ROVXpVeFl6SldlVXh0T1dwTlV6UjFXVmRHYUZsWFJtaFpWMFo2WkROV2FHRnRVbkpOTWxwdVpFZFdlV1I2VG01YVJ6a3laRWQ0Y1dReVozcFplbVJwWkRKS00yUkhWakpOZWxKMVpGUmFNbGt6WkRSWmJYaHlUak5TYUdKSWJHaEphWGRwWVZoT2VrbHFiMmxaV0ZZd1lVWk9iR051V25CWk1sVjFZak5LYUZreWVHeE1iVTUyWWxOSmMwbHVUbWhpVjNobVdtNUNlV0ZYTlRCSmFtOXBUbXBSTmsxNmF6Wk5hbEUyV20xTk5sbHRTVFpOUjFFMlRrUkZObHBVWnpaYWFrRTJUV3BOTms1WFVUWk5lbFUyVDBSQk5rMXFaelpOYWtrMlQwUk5hVXhEU25ka1NHeDNXbE5KTmtsdVZucGFXRWxwVEVOS2VscFlUbnBZTWxZMFkwTkpOa2xyTVhaaWFYZG5UV3BWWjFSdE9USkpSRWwzVFdwUlowMVVUVFpPUkdNMlRrUlpaMVpXVWtSSmFYZHBXVmhXYTBscWIybGlNazV3U1dsM2FXTklUakJsV0VKc1NXcHZhV0p0UmpCYWFVbHpTVzVTTUdWWVFteEphbTlwWXpKR2RHSkhUV2xNUTBwc1pVaEJhVTlxUlROTmVra3hUV3BaTTA1RVNYTkpiV3hvWkVOSk5rMVVZM3BOYWxWNVRYcEZNRTFwZDJsaGJsSndTV3B2YVZsNlRUVk5iVWt4VGtkUmRFOUhVVFZPYVRBd1dXcHJNVXhYUlhwTmJWVjBUV3BaTTAxNlp6Rk9hbEV4V1dwc2JVbHBkMmxrUjFaMVdWYzFNRWxxYjJsaU1rNXdXa1JGZFdSSFZuVlpWelZxWlZNMWRsbDZSWFZNYlVab1dWZEdhRmxYUm1oYU1uUnBaVzFrYms1dGVIZGxia3B0VGtSa05HVnVhekJqYlhCMlpVZGpNRnBIVlRKaWJVNXRZVmhGZVdOdE5XcGlWM0J3WkZkd01tVlVTbTloYldRMFpHNXdjR05UU1hOSmJXeDZXREphYkZwRFNUWkpibEo1WkZkVmFVeERTbTVqYmtKNlNXcHZhVWxwZDJsaGJtUnlTV3B2YVdVeGQybGhNbXhyV0VOSk5saERTa3BhTWpWMlkyMVdhMWhEU1hOWVEwcDFXRU5KTmxoRFNYZFViWGd5VEZjd00xcHRiRUpYYlc4eVlqSlNVV014U1hoVVNGSlpUbFZXVDA0d1VuUk5XR2MwVlVad2NscEhkRzlPYW1ScFVtMDFTV1JxU25OWldGcHlVVlZrTkZSRk9UUmtWbFpLVlZaamVFNXJXbFpWTTFwM1RrWmtVMUpYTVVwWmFtc3dUMGhhVVU1V1RuWlhiV2hDVm14d2EySnRhek5qUlZVMVZHeFdSMVl4Y0ZOVVNGSTJZVEIwTlU1SGEzcFZWV2Q0VGtVNGVtRXljSEppYWxKSlZVVlNWVmd5VW5KaGFrNVJVVEZhV0Uwd1JUVmlSR1JtWkZoT1dWUnJVWGRTUlRsNVVtcENabFF3YUZSa2JEbExaSHBLTVdKSFNUQlhWRVpXVXpOT1ZGRnVSWGRWYkRneVdtczVRazFzT1hCaGJrNXhWVEJrV0ZWWVdraGtlbEozVFRKWmVWTnJiRzlUVkdoT1lrWldOVTlXVms5T2F6bEhUakphY0ZSRk1WcFRSbXN6WWpGYU5GTnFaSFJNVmpsYVdsaENkbEZxVGtSVE1taFhWRlZhTlZkSGJIQlZNVkV3WVZkNGVWb3lZekJUVkZaVFdsVndWRlJWVWxwT01taHlWRzVhYjJORlZUUlRNRVV3V1d0cmVXRXpjRXhNVlRSNlZVUkdTazFWVW1aaE0wWlRVa1JDY2xOWFVqQlVWVTVSVmtWU2RXUXlXbEZVV0ZaUVlWVXhWVlF3Y0ZCTlIzQlVVV3RLYW1KdWJIVk5NblEwWVROR2RrNXROWFJpVkd4UFZUSkplVTFZWkdOSmFYaGpTVzFXWTBscWNHTkphMFpTVVZWS1kwbHBlR05KYlhRd1pWWjNhVTlzZDJsVmJFNUNXRU5KYzFoRFNqRmpNbFpqU1dwd2RXUlhlSE5tVTBvNUxsRlpjbkYwZEVzNVMyRlZaRXAzVGs0MWRXTnRSbTl5UWxkU1pWOUtia1JwTUZwVmQwVnZjRFZNVFZJeFNFSXRVM2w1V0hkc1VuTnhUVzFrWDNOeGR6UnRlRUZ2YjJSME5URlVaM0JuUTNCa2NVeDVSVWxWTFdoUGVXVnFTRlpPY1ZGMVprOHhZM1JDU1VWb2MxTkpNWGQxYlVselVtSkhSV0ZUTURGUlRrVlJWMDU0TFV0b1JWRXhjRTFZVmpCNWJEZFhTbU5xWTFCdE9Xd3hiRkpIWDJJNU5ucElTbTlQY0hKd1ZXSk1NVmxXYkRKS1NuSnRNVWxXTTBSNExYTkliMlI2U2tFME5qVlROMEpQVEZwdVVTMDFka2R4ZFRSNFlUTjFkMUphUVdGdk5reEVURkJYUVRGQmVHSk9NMnBRVDJrME1UWm9XRzE1TmtGR1VIUXdkamh3WDNnMU1XeG9SMHR0ZEVGdFNFeEpSV3BUYzBaZmMydDRURGczU2twMlZYSnJURWhVUTIwNGNYRXlNWGhyYUY4NVlrcExVbkpVVkdsdVExQlBTekV4YkVObFNqQTVUamxoUWtaNU9XVkpOM0JUYWkxZlVWeGNYQ0lzYzJsbmJtRjBkWEpsUFZ4Y1hDSlpVV1pIUzJNek5sbERhR2hpZVhSeWMwMWFUSGhVVFd4cEwwRnBOR1ZSY1VOMloyWjRhV05PUmxOek9GRm1NV3BNWWxWaGJFOW1lbFZhV2pWQlRuaHVSMFJyZVhjd2RFUlFVMWxtZW1KUmRqRkRRMVJHVjJ4a2RsbDBjRE53TURsT1MwcFVObkZzYTJKS2NHTlRVRmcxY1RKMlltUnZSMDlSWmxwS1RWUlFTblppV2pOalRXeEhkRW96VVRReFZqSndkbEZ2Y25SMFpqSkZOVEFyV1dFMFlVWkNVa0oxUzFRd2NuZHlNVzgxYUVsYVJrZHFUWGh4TVVGcFlTOVFWMGQ1TUN0bWNHUmtaV3RQU21WWWEyZFdMMGh2UlhoVGFtRTNObWxPYkd0MGVEQlNWSE5vYjNJd2RXZ3JZVlYzYm14M1lXVkJWMWg2U21kWlJFVjFXbms0WTJnMGRGUkdiVGw2WjNWRFEzRldlVTlSY25sbk9HMXZXRWcwV1RSTFdtOUJkR0pWUjJGRFUwOTFhRGhGTW5abVlsRlJUV2hxWldsalIyOU9USEZHTDFsbk9ETXhaWHAyWmtaUWRsTlBVVk4xY2s1cVUyYzlQVnhjWENJc2RtVnljMmx2YmoxY1hGd2lNVnhjWENKY0lpeGNJbWx6YzNWbGNsd2lPbHdpYUZ3aWZTeDdYQ0pyWlhsY0lqcGNJbWx6WDJabFpGd2lMRndpZG1Gc2RXVmNJanBjSW5SeWRXVmNJaXhjSW1semMzVmxjbHdpT2x3aVlYVjBhRk5sY25acFkyVXViM0poWTJ4bExtTnZiVndpZlN4N1hDSnJaWGxjSWpwY0luTmxjM05mWlhod1hDSXNYQ0oyWVd4MVpWd2lPbHdpVFc5dUxDQXlOU0JPYjNZZ01qQXlOQ0F4TXpvME56bzBOaUJWVkVOY0lpeGNJbWx6YzNWbGNsd2lPbHdpWVhWMGFGTmxjblpwWTJVdWIzSmhZMnhsTG1OdmJWd2lmU3g3WENKclpYbGNJanBjSW5CemRIbHdaVndpTEZ3aWRtRnNkV1ZjSWpwY0ltNWhkR1pjSWl4Y0ltbHpjM1ZsY2x3aU9sd2lZWFYwYUZObGNuWnBZMlV1YjNKaFkyeGxMbU52YlZ3aWZTeDdYQ0pyWlhsY0lqcGNJblIwZVhCbFhDSXNYQ0oyWVd4MVpWd2lPbHdpYzJGdGJHTmNJaXhjSW1semMzVmxjbHdpT2x3aVlYVjBhRk5sY25acFkyVXViM0poWTJ4bExtTnZiVndpZlN4N1hDSnJaWGxjSWpwY0ltaGZLSEpsY1hWbGMzUXRkR0Z5WjJWMEtWd2lMRndpZG1Gc2RXVmNJanBjSW1kbGRDQXZNakF4T0RBME1Ua3ZaRzlqYTJWeUwzUnZhMlZ1WENJc1hDSnBjM04xWlhKY0lqcGNJbWhjSW4wc2Uxd2lhMlY1WENJNlhDSm5jbkJ6WENJc1hDSjJZV3gxWlZ3aU9sd2lYQ0lzWENKcGMzTjFaWEpjSWpwY0ltRjFkR2hUWlhKMmFXTmxMbTl5WVdOc1pTNWpiMjFjSW4xZExGd2lZWFYwYUV0cGJtUmNJanBjSWxWVFJWSmNJbjBpZlEuSWZJWFlNcnhtTC16SmloMjZ2YU9zdEVhUmFIR0JXQk5mWmp5eWpGRlBXYw==" | docker login -u BEARER_TOKEN --password-stdin iad.ocir.io  # Replace 'your-oci-token-here' with your actual token

      # Build Docker image
      - name: Build Docker image
        run: |
          echo "Building Docker image..."
          docker build -t iad.ocir.io/idlcbf4ihtx7/test-a/test-one/image-file:latest .
          docker tag iad.ocir.io/idlcbf4ihtx7/test-a/test-one/image-file:latest iad.ocir.io/idlcbf4ihtx7/test-a/test-one/image-file:${{ github.sha }}

      # Verify the image exists locally
      - name: Verify image exists locally
        run: |
          docker images | grep "iad.ocir.io/idlcbf4ihtx7/test-a/test-one/image-file" || echo "Image not found"

  # Job to push the Docker image to OCI Container Registry
  push_image:
    runs-on: ubuntu-latest
    needs: build_image  # Ensures this runs after build_image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up OCI CLI
      - name: Set up OCI CLI
        uses: oracle-actions/setup-oci-cli@v1

      # Log in to OCI Container Registry using the OCI CLI
      - name: Log in to OCI Container Registry using OCI CLI
        run: |
          echo "Logging in to OCI Container Registry using OCI CLI..."
          oci iam auth security_token --token "your-oci-token-here"  # Replace with your actual token for testing

      # Push Docker image to OCI Container Registry
      - name: Push Docker image to OCI Container Registry
        run: |
          echo "Pushing Docker image to OCI Container Registry..."
          docker push iad.ocir.io/idlcbf4ihtx7/test-a/test-one/image-file:latest
          docker push iad.ocir.io/idlcbf4ihtx7/test-a/test-one/image-file:${{ github.sha }}
